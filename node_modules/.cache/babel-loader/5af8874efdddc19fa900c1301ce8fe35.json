{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/IT-INCUBATOR/TodoList D/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { TodoList } from \"./TodoList\";\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: v1(),\n    title: 'html&css',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'JS',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'ReactJS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'TypeScript',\n    isDone: false\n  }]);\n  const [filter, setFilter] = useState('all');\n  const removeTask = id => {\n    let filteredTasks = tasks.filter(t => t.id !== id);\n    setTasks(filteredTasks);\n  };\n  const addTask = () => {\n    let newTask = {\n      id: v1(),\n      title: 'html&css',\n      isDone: true\n    };\n  };\n  const changeFilter = value => {\n    setFilter(value);\n  };\n  let tasksForDoToList = tasks;\n  if (filter === 'completed') {\n    tasksForDoToList = tasks.filter(t => t.isDone);\n  }\n  if (filter === 'active') {\n    tasksForDoToList = tasks.filter(t => !t.isDone);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(TodoList, {\n      title: 'Hello',\n      task: tasksForDoToList,\n      removeTask: removeTask,\n      changeFilter: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"11fZYBdAxq0I0F02BDDueMthqH0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TodoList","v1","App","tasks","setTasks","id","title","isDone","filter","setFilter","removeTask","filteredTasks","t","addTask","newTask","changeFilter","value","tasksForDoToList"],"sources":["/Users/admin/Desktop/IT-INCUBATOR/TodoList D/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {TaskType, TodoList} from \"./TodoList\";\r\nimport {v1} from 'uuid'\r\n\r\nexport type FilterValuesType = 'all' | 'completed' | 'active'\r\nfunction App() {\r\n\r\n    const [tasks, setTasks] = useState<Array<TaskType>>([\r\n        {id: v1(), title: 'html&css', isDone: true},\r\n        {id: v1(), title: 'JS', isDone: false},\r\n        {id: v1(), title: 'ReactJS', isDone: true},\r\n        {id: v1(), title: 'TypeScript', isDone: false}\r\n    ])\r\n\r\n    const [filter, setFilter] = useState<FilterValuesType>('all')\r\n\r\n    const removeTask = (id: string) => {\r\n        let filteredTasks = tasks.filter((t) => t.id !== id)\r\n        setTasks(filteredTasks)\r\n    }\r\n\r\n    const addTask = () => {\r\n        let newTask = {id: v1(), title: 'html&css', isDone: true}\r\n    }\r\n\r\n    const changeFilter = (value: FilterValuesType) => {\r\n        setFilter(value)\r\n    }\r\n\r\n\r\n    let tasksForDoToList = tasks\r\n    if (filter === 'completed') {\r\n        tasksForDoToList = tasks.filter(t => t.isDone)\r\n    }\r\n    if (filter === 'active') {\r\n        tasksForDoToList = tasks.filter(t => !t.isDone)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <TodoList title={'Hello'}\r\n                      task={tasksForDoToList}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAClB,SAAkBC,QAAQ,QAAO,YAAY;AAC7C,SAAQC,EAAE,QAAO,MAAM;AAAA;AAGvB,SAASC,GAAG,GAAG;EAAA;EAEX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAkB,CAChD;IAACM,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAI,CAAC,EAC3C;IAACF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC,EACtC;IAACF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAI,CAAC,EAC1C;IAACF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAK,CAAC,CACjD,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAmB,KAAK,CAAC;EAE7D,MAAMW,UAAU,GAAIL,EAAU,IAAK;IAC/B,IAAIM,aAAa,GAAGR,KAAK,CAACK,MAAM,CAAEI,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC;IACpDD,QAAQ,CAACO,aAAa,CAAC;EAC3B,CAAC;EAED,MAAME,OAAO,GAAG,MAAM;IAClB,IAAIC,OAAO,GAAG;MAACT,EAAE,EAAEJ,EAAE,EAAE;MAAEK,KAAK,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAI,CAAC;EAC7D,CAAC;EAED,MAAMQ,YAAY,GAAIC,KAAuB,IAAK;IAC9CP,SAAS,CAACO,KAAK,CAAC;EACpB,CAAC;EAGD,IAAIC,gBAAgB,GAAGd,KAAK;EAC5B,IAAIK,MAAM,KAAK,WAAW,EAAE;IACxBS,gBAAgB,GAAGd,KAAK,CAACK,MAAM,CAACI,CAAC,IAAIA,CAAC,CAACL,MAAM,CAAC;EAClD;EACA,IAAIC,MAAM,KAAK,QAAQ,EAAE;IACrBS,gBAAgB,GAAGd,KAAK,CAACK,MAAM,CAACI,CAAC,IAAI,CAACA,CAAC,CAACL,MAAM,CAAC;EACnD;EAEA,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB,QAAC,QAAQ;MAAC,KAAK,EAAE,OAAQ;MACf,IAAI,EAAEU,gBAAiB;MACvB,UAAU,EAAEP,UAAW;MACvB,YAAY,EAAEK;IAAa;MAAA;MAAA;MAAA;IAAA;EACnC;IAAA;IAAA;IAAA;EAAA,QACA;AAEd;AAAC,GA1CQb,GAAG;AAAA,KAAHA,GAAG;AA4CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}