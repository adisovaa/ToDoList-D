{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/IT-INCUBATOR/TodoList D/src/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = props => {\n  _s();\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const onNewTitleChangeHandler = e => {\n    setNewTaskTitle(e.currentTarget.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTaskTitle,\n        onChange: onNewTitleChangeHandler,\n        onKeyPress: e => {\n          if (e.charCode === 13) {\n            props.addTask(newTaskTitle);\n            setNewTaskTitle('');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.addTask(newTaskTitle);\n          setNewTaskTitle('');\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.task.map(t => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: t.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => props.removeTask(t.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.changeFilter('all'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.changeFilter('active'),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.changeFilter('completed'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"CmSzgsS3OGU3HQvNVMoNpifiZpQ=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoList","props","newTaskTitle","setNewTaskTitle","onNewTitleChangeHandler","e","currentTarget","value","title","charCode","addTask","task","map","t","isDone","removeTask","id","changeFilter"],"sources":["/Users/admin/Desktop/IT-INCUBATOR/TodoList D/src/TodoList.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {FilterValuesType} from \"./App\";\n\nexport type TaskType = {\n    id: string\n    title: string\n    isDone: boolean\n}\n\ntype PropsType = {\n    title: string\n    task: Array<TaskType>\n    removeTask: (id: string) => void\n    changeFilter: (value: FilterValuesType) => void\n    addTask: (value: string) => void\n}\n\nexport const TodoList = (props: PropsType) => {\n    const [newTaskTitle, setNewTaskTitle] = useState('')\n\n    const onNewTitleChangeHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        setNewTaskTitle(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            <h3>{props.title}</h3>\n            <div>\n                <input type='text'\n                       value={newTaskTitle}\n                       onChange={onNewTitleChangeHandler}\n                       onKeyPress={(e) => {\n                           if (e.charCode === 13) {\n                               props.addTask(newTaskTitle)\n                               setNewTaskTitle('')\n                           }\n                       }}\n                />\n                <button onClick={() => {\n                    props.addTask(newTaskTitle)\n                    setNewTaskTitle('')\n                }}>+\n                </button>\n            </div>\n            <ul>\n                {\n                    props.task.map((t) => {\n                        return <li key={t.id}>\n                            <input type=\"checkbox\" checked={t.isDone}/>\n                            <button onClick={() => props.removeTask(t.id)}>x</button>\n                            <span>{t.title}</span>\n                        </li>\n                    })\n                }\n            </ul>\n            <div>\n                <button onClick={() => props.changeFilter('all')}>All</button>\n                <button onClick={() => props.changeFilter('active')}>Active</button>\n                <button onClick={() => props.changeFilter('completed')}>Completed</button>\n            </div>\n        </div>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAiBtC,OAAO,MAAMC,QAAQ,GAAIC,KAAgB,IAAK;EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMK,uBAAuB,GAAIC,CAAkC,IAAK;IACpEF,eAAe,CAACE,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EAC1C,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAKN,KAAK,CAACO;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,wBACI;QAAO,IAAI,EAAC,MAAM;QACX,KAAK,EAAEN,YAAa;QACpB,QAAQ,EAAEE,uBAAwB;QAClC,UAAU,EAAGC,CAAC,IAAK;UACf,IAAIA,CAAC,CAACI,QAAQ,KAAK,EAAE,EAAE;YACnBR,KAAK,CAACS,OAAO,CAACR,YAAY,CAAC;YAC3BC,eAAe,CAAC,EAAE,CAAC;UACvB;QACJ;MAAE;QAAA;QAAA;QAAA;MAAA,QACP,eACF;QAAQ,OAAO,EAAE,MAAM;UACnBF,KAAK,CAACS,OAAO,CAACR,YAAY,CAAC;UAC3BC,eAAe,CAAC,EAAE,CAAC;QACvB,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QACO;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,eACN;MAAA,UAEQF,KAAK,CAACU,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAK;QAClB,oBAAO;UAAA,wBACH;YAAO,IAAI,EAAC,UAAU;YAAC,OAAO,EAAEA,CAAC,CAACC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAE,eAC3C;YAAQ,OAAO,EAAE,MAAMb,KAAK,CAACc,UAAU,CAACF,CAAC,CAACG,EAAE,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW,eACzD;YAAA,UAAOH,CAAC,CAACL;UAAK;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA,GAHVK,CAAC,CAACG,EAAE;UAAA;UAAA;UAAA;QAAA,QAIf;MACT,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL,eACL;MAAA,wBACI;QAAQ,OAAO,EAAE,MAAMf,KAAK,CAACgB,YAAY,CAAC,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eAC9D;QAAQ,OAAO,EAAE,MAAMhB,KAAK,CAACgB,YAAY,CAAC,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACpE;QAAQ,OAAO,EAAE,MAAMhB,KAAK,CAACgB,YAAY,CAAC,WAAW,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QACxE;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GA7CWjB,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}